syntax = "proto3";
package nocloud.chats;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

message Chat{
    string uuid = 1;
    string owner = 2;
    string title = 3;
}

message ChatMessage{
    string uuid = 1;
    string from = 2;
    string to = 3;
    string message = 4;
}

message ChatMessageStreamRequest {
    string uuid = 1;
}
message SendChatMessageRequest {
    ChatMessage message = 1;
}
message DeleteChatMessageRequest {
    string uuid = 1;
}
message GetChatMessageRequest {
    string uuid = 1;
}
message ListChatMessagesRequest {
    string chatUuid = 1;
}
message ListChatMessagesResponse {
    repeated ChatMessage messages = 1;
}

message InviteChatRequest {
    string chatUuid = 1;
    string userUuid = 2;
}
message CreateChatRequest {
    Chat chat = 1;
}
message GetChatRequest {
    string uuid = 1;
}
message DeleteChatRequest {
    string uuid = 1;
}

message Response {}

service ChatService {
    rpc SendChatMessage(nocloud.chats.SendChatMessageRequest) 
        returns (nocloud.chats.ChatMessage) {
        option (google.api.http) = {
            put: "/messages"
            body: "*"
        };
    };
    rpc ListChatMessages(nocloud.chats.ListChatMessagesRequest) 
        returns (nocloud.chats.ListChatMessagesResponse) {
        option (google.api.http) = {
            get: "/chats/{chatUuid}/messages"
        };
    };

    rpc GetChatMessage(nocloud.chats.GetChatMessageRequest) 
        returns (nocloud.chats.ChatMessage) {
        option (google.api.http) = {
            get: "/messages/{uuid}"
        };
    };

    rpc DeleteChatMessage(nocloud.chats.DeleteChatMessageRequest) 
        returns (nocloud.chats.Response) {
        option (google.api.http) = {
            delete: "/messages/{uuid}"
        };
    };

    rpc UpdateChatMessage(nocloud.chats.ChatMessage) 
        returns (nocloud.chats.ChatMessage) {
        option (google.api.http) = {
            patch: "/messages"
            body: "*"
        };
    };

    rpc GetChat(nocloud.chats.GetChatRequest) 
        returns (nocloud.chats.Chat) {
        option (google.api.http) = {
            get: "/chats/{uuid}"
        };
    };

    rpc Invite(nocloud.chats.InviteChatRequest) 
        returns (nocloud.chats.Response) {
        option (google.api.http) = {
            post: "/chats/invite"
            body: "*"
        };
    };

    rpc CreateChat(nocloud.chats.CreateChatRequest) 
        returns (nocloud.chats.Chat) {
        option (google.api.http) = {
            put: "/chats"
            body: "*"
        };
    };

    rpc DeleteChat(nocloud.chats.DeleteChatRequest) 
        returns (nocloud.chats.Response) {
        option (google.api.http) = {
            delete: "/chats/{uuid}"
        };
    };

    rpc UpdateChat(nocloud.chats.Chat) 
        returns (nocloud.chats.Chat) {
        option (google.api.http) = {
            patch: "/chats"
            body: "*"
        };
    };

    rpc Stream(nocloud.chats.ChatMessageStreamRequest) returns (stream nocloud.chats.ChatMessage) {
        option (google.api.http) = {
            get: "/messages/{uuid}/stream"
        };
    };
}
